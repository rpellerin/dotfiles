#!/bin/sh
# Taken from: https://gist.github.com/guilherme/9604324
# Check for console.log and others that might accidentally be committed
#Â This file must be executable (chmod +x)

echo 'Pre-commit hook running...'

consoleregexp='debugger|pry|debug\(|console\.log|token|password|pwd|TOKEN|PASSWORD|PWD|secret|SECRET'
MODIFIED_FILES=$(git diff --cached --no-ext-diff --unified=0 --no-prefix --name-only)
MODIFIED_FILES_JS=$(echo "$MODIFIED_FILES" | grep -E ".*\.js$")
MODIFIED_FILES_RB=$(echo "$MODIFIED_FILES" | grep -E ".*\.(rb|rake)$")

# CHECK FORBIDDEN KEYWORDS
if test $(git diff --cached --no-ext-diff --unified=0 --no-prefix | egrep "^\+" | grep -E "$consoleregexp" | wc -l) != 0
then
  echo "$MODIFIED_FILES" | while read file; do grep -H -nE "$consoleregexp" "$file"; done
  read -p "Ocurrences of forbidden words found in the code. Continue? (y/n)" -r yn < /dev/tty
  echo $yn | grep ^[Yy]$ 1>/dev/null
  if [ $? -eq 0 ]
  then
    echo 'OK!' # THE USER WANTS TO CONTINUE
  else
    exit 1; # THE USER DOESN'T WANT TO CONTINUE SO ABORT
  fi
fi

set -e # Exits as soon as one programs returns != 0

if [ -x "$(command -v eslint)" ] && [ -n "$MODIFIED_FILES_JS" ]; then
  echo 'Running Eslint...'
  echo "$MODIFIED_FILES_JS" | while read file; do
    if [ -f "$file" ]; then
      echo "$file"
    fi
  done | xargs --no-run-if-empty eslint --max-warnings 0 --no-ignore
fi

if [ -x "$(command -v rubocop)" ] && [ -n "$MODIFIED_FILES_RB" ]; then
  echo 'Running Rubocop...'
  echo "$MODIFIED_FILES_RB" | while read file; do
    if [ -f "$file" ]; then
      echo "$file"
    fi
  done | xargs --no-run-if-empty rubocop --auto-correct --force-exclusion
fi

echo 'All good!'
