#!/bin/bash

# git hook to run a command after `git pull` if a specified file was changed

# HEAD@{1} is better than ORIG_HEAD, see stackoverflow.com/questions/4877306/list-changed-files-in-git-post-merge-hook/18957885

FROM_COMMIT="${FROM_COMMIT:-HEAD@{1\}}"
TO_COMMIT="${TO_COMMIT:-HEAD}"
[ "$DEBUG_GIT_HOOKS" = "1" ] && echo "Moved from $(git rev-parse $FROM_COMMIT) to $(git rev-parse $TO_COMMIT)"

changed_files="$(git diff-tree -r --name-only --no-commit-id $FROM_COMMIT $TO_COMMIT)"

check_run() {
    grep --quiet -E "$1" <<< "$changed_files"
}

# Run `yarn` if yarn.lock changed
[ "$DEBUG_GIT_HOOKS" = "1" ] && check_run "^yarn\.lock" && echo "yarn.lock changed, killing yarn dev...."
check_run "^yarn\.lock" && [ -f /tmp/node-exec.sh.pid ] && kill -s USR1 "$(cat /tmp/node-exec.sh.pid)" >/dev/null 2>&1

if [ -x "$(command -v bundle)" ]; then
  [ "$DEBUG_GIT_HOOKS" = "1" ] && check_run "^Gemfile\.lock" && echo "Gemfile.lock changed, running bundle...."
  check_run "^Gemfile\.lock" && bundle >/dev/null 2>&1 &
fi
